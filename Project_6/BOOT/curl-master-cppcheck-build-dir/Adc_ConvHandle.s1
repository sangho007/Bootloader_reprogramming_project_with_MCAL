Adc_lInitWriteClcSfr global:[TestAdc_DebugVarClc] call:[OS_ReadPeripheral32,OS_WritePeripheral32,SafeMcal_ReportError,TRUSTED_ApplResetEndInit,TRUSTED_ApplSetEndInit,return] noreturn:[SafeMcal_ReportError,return]
Adc_lDeInitWriteClcSfr global:[TestAdc_DebugVarClc] call:[OS_ReadPeripheral32,OS_WritePeripheral32,SafeMcal_ReportError,TRUSTED_ApplResetEndInit,TRUSTED_ApplSetEndInit,return] noreturn:[SafeMcal_ReportError,return]
Adc_lDisableResultInt call:[OS_ModifyPeripheral32] noreturn:[OS_ModifyPeripheral32]
Adc_lReadResult call:[OS_ReadPeripheral32,return] noreturn:[return]
Adc_lReadValidFlag call:[OS_ReadPeripheral32,return] noreturn:[return]
Adc_lDeInitWriteKernelRstSfr global:[TestAdc_DebugVarRst] call:[OS_ReadPeripheral32,OS_WritePeripheral32,TRUSTED_ApplResetEndInit,TRUSTED_ApplSetEndInit,while] noreturn:[while]
Adc_lInitWriteKernelRstSfr global:[TestAdc_DebugVarRst] call:[OS_ReadPeripheral32,OS_WritePeripheral32,TRUSTED_ApplResetEndInit,TRUSTED_ApplSetEndInit,while] noreturn:[while]
Adc_lWriteGlobCfgSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteGlobIpClassSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteGlobEvntNpSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteEmuxSelSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteArbCfgSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteArbPrSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteGrpIpClassSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteSynCtrSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteSrcEvntNpSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteEmuxCtrSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteSrcEvntClrFlagSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteChEvntClrFlagSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lWriteGlobEvntFlagSfr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lReadSrcEvntFlagSfr call:[OS_ReadPeripheral32,return] noreturn:[return]
Adc_lReadGlobEvntFlagSfr call:[OS_ReadPeripheral32,return] noreturn:[return]
Adc_lReadChEvntFlagSfr call:[OS_ReadPeripheral32,return] noreturn:[return]
Adc_lReadArbCfgSfr call:[OS_ReadPeripheral32,return] noreturn:[return]
Adc_lSetChEvntNodePtr call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lSetResEventNode call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Adc_lKernelConfigured global:[Adc_kConfigPtr] call:[return] noreturn:[return]
Adc_lQueueRSConfigured call:[return] noreturn:[return]
Adc_lAutoScanConfigured call:[return] noreturn:[return]
Adc_lBackgndScanConfigured call:[return] noreturn:[return]
Adc_lLimitChkConfigured call:[return] noreturn:[return]
Adc_lGetEmuxKernel call:[EXTRACT,return] noreturn:[return]
Adc_lGetAdcKernel call:[EXTRACT,return] noreturn:[return]
Adc_lGetKernelGroupId call:[return] noreturn:[return]
Adc_lSetGroupResultAtomic call:[Mcal_SetAtomic] noreturn:[Mcal_SetAtomic]
Adc_lClrGroupResultAtomic call:[Mcal_SetAtomic] noreturn:[Mcal_SetAtomic]
Adc_lGetGroupResult call:[EXTRACT,return] noreturn:[return]
Adc_lSetGroupStatusBusyAtomic call:[Mcal_SetAtomic] noreturn:[Mcal_SetAtomic]
Adc_lClrResBuffEndStatusAtomic call:[Mcal_SetAtomic] noreturn:[Mcal_SetAtomic]
Adc_lSetGroupStatusIdleAtomic call:[Mcal_SetAtomic] noreturn:[Mcal_SetAtomic]
Adc_lGetGroupStatus call:[EXTRACT,return] noreturn:[return]
Adc_lGetResBuffEndStatus call:[EXTRACT,return] noreturn:[return]
Adc_lResetTrigSrcData global:[Adc_BgndScanData]
Adc_lGetEmuxSelect call:[return] noreturn:[return]
Adc_lGetEmuxEnable call:[return] noreturn:[return]
Adc_lGetEmuxScan call:[return] noreturn:[return]
Adc_lGetGroupStatusAll call:[return] noreturn:[return]
Adc_lGetTimEnData call:[EXTRACT,return] noreturn:[return]
Adc_lGetEruData call:[EXTRACT,return] noreturn:[return]
Adc_lIsr global:[Adc_kConfigPtr] call:[Adc_lClearEventFlag,Adc_lGetDataAddress,Adc_lRSInterruptHandler,Adc_lSetGroupResultAtomic,Adc_lUpdateResBuffer,Adc_lWriteGlobEvntFlagSfr,Adc_lWriteSrcEvntClrFlagSfr,NotifFctPtr] noreturn:[Adc_lWriteGlobEvntFlagSfr,Adc_lWriteSrcEvntClrFlagSfr,NotifFctPtr]
Adc_lIsrLimitCheck global:[Adc_kConfigPtr] call:[Adc_lGetDataAddress,Adc_lRSInterruptHandler,Adc_lSetGroupResultAtomic,Adc_lUpdateResBuffer,NotifFctPtr] noreturn:[NotifFctPtr]
Adc_lCheckInitParam global:[Adc_InitStatus,Adc_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError]
Adc_lNonAutosarRSIntHandler global:[Adc_kConfigPtr] call:[Adc_lDisableResultInt,Adc_lGetDataAddress,Adc_lResetTrigSrcData,Adc_lSetGroupStatusIdleAtomic,Adc_lWriteEmuxCtrSfr]
Adc_lUpdateResBuffer global:[Adc_kConfigPtr] call:[Adc_lAlignResultBuffer,Adc_lGetDataAddress,Adc_lReadResult,Adc_lSetResBuffEndStatusAtomic,Adc_lUpdateSlaveResult,while] noreturn:[Adc_lSetResBuffEndStatusAtomic,Adc_lUpdateSlaveResult]
Adc_lUpdateSlaveResult global:[Adc_kConfigPtr] call:[Adc_lAlignResultBuffer,Adc_lGetDataAddress,Adc_lReadResult,while] noreturn:[while]
Adc_lSchedulerOnStart global:[Adc_BgndScanData,Adc_kConfigPtr] call:[Adc_lClrGroupResultAtomic,Adc_lClrResBuffEndStatusAtomic,Adc_lGetDataAddress,Adc_lPrepareGrpForStart,Adc_lResetTrigSrcData,Adc_lSchmEnterScheduleStart,Adc_lSchmExitScheduleStart,Adc_lSetGroupStatusBusyAtomic,Adc_lStartSwConversionRS,Adc_lStopConvRequestSource,Adc_lUpdateRsGroupData,Adc_lWriteEmuxCtrSfr] noreturn:[Adc_lStartSwConversionRS]
Adc_lSchedulerOnStop global:[Adc_kConfigPtr] call:[Adc_lClrGroupResultAtomic,Adc_lClrResBuffEndStatusAtomic,Adc_lGetDataAddress,Adc_lGetGroupStatus,Adc_lResetTrigSrcData,Adc_lScheduleNext,Adc_lSchmEnterScheduleStop,Adc_lSchmExitScheduleStop,Adc_lSetGroupStatusIdleAtomic,Adc_lStopConvRequestSource,Adc_lWriteEmuxCtrSfr,Mcal_SetAtomic] noreturn:[Adc_lScheduleNext]
Adc_lScheduleNext global:[Adc_kConfigPtr] call:[Adc_lGetDataAddress,Adc_lGetGroupStatusAll,Adc_lPrepareGrpForStart,Adc_lSchmEnterScheduleNext,Adc_lSchmExitScheduleNext,Adc_lStartSwConversionRS,Adc_lUpdateRsGroupData,Mcal_CountLeadingZeros] noreturn:[Adc_lStartSwConversionRS]
Adc_lStopConvRequestSource global:[Adc_kConfigPtr] call:[Adc_lClearReqSrcSfr,Adc_lDisableResultInt,Adc_lDmaChDeInit,Adc_lGetDataAddress,Adc_lGetEmuxScan,Adc_lGetEruData,Adc_lGetTimEnData,Adc_lResetDmaData,Adc_lResetEruCfg,Adc_lResetEruGateCfg,Adc_lStopGtmTimer] noreturn:[Adc_lClearReqSrcSfr,Adc_lResetDmaData,Adc_lResetEruCfg,Adc_lResetEruGateCfg,Adc_lStopGtmTimer]
Adc_lSetHwTrigger call:[Adc_lEruGateCfg,Adc_lEruTrigCfg,Adc_lGetEruData,Adc_lGetTimEnData,Adc_lGtmTimerCfg] noreturn:[Adc_lEruGateCfg,Adc_lEruTrigCfg,Adc_lGtmTimerCfg]
Adc_lPushOnQueue call:[Adc_lClrGroupResultAtomic,Adc_lClrResBuffEndStatusAtomic,Adc_lGetDataAddress,Adc_lScheduleFromQueue,Adc_lSchmEnterPushQueue,Adc_lSchmExitPushQueue,Adc_lSetGroupStatusBusyAtomic] noreturn:[Adc_lScheduleFromQueue]
Adc_lPopFromQueue global:[Adc_kConfigPtr] call:[Adc_lClrGroupResultAtomic,Adc_lClrResBuffEndStatusAtomic,Adc_lGetDataAddress,Adc_lResetTrigSrcData,Adc_lScheduleFromQueue,Adc_lSchmEnterPopQueue,Adc_lSchmExitPopQueue,Adc_lSetGroupStatusIdleAtomic,Adc_lStopConvRequestSource,Adc_lWriteEmuxCtrSfr,Mcal_SetAtomic] noreturn:[Adc_lScheduleFromQueue]
Adc_lScheduleFromQueue global:[Adc_BgndScanData,Adc_kConfigPtr] call:[Adc_lGetDataAddress,Adc_lPrepareGrpForStart,Adc_lStartSwConversionRS,Adc_lUpdateRsGroupData]
Adc_lRemoveFromQueue
Adc_lInitGlobalVarCheck call:[Adc_lGetDataAddress,Adc_lInitDataVarCheck,Adc_lInitStatusVarCheck,Adc_lKernelConfigured,return,while] noreturn:[return]
Adc_lInitStatusVarCheck call:[return] noreturn:[return]
Adc_lInitDataVarCheck call:[return,while] noreturn:[return]
Adc_lUpdateDmaData call:[Adc_lGetDataAddress]
Adc_lResetDmaData global:[Adc_DmaBuffer] call:[Adc_lGetDataAddress,while] noreturn:[while]
Adc_lDmaChInit global:[Adc_DmaBuffer] call:[Adc_lGetDataAddress,TRUSTED_Mcal_DmaCfgIntControl,TRUSTED_Mcal_DmaChClrCtlCfg,TRUSTED_Mcal_DmaChClrIntrFlags,TRUSTED_Mcal_DmaEnableChIntrTrigger,TRUSTED_Mcal_DmaEnableHwTransfer,TRUSTED_Mcal_DmaEnableIntr,TRUSTED_Mcal_DmaSetAdicr,TRUSTED_Mcal_DmaSetDataWidth,TRUSTED_Mcal_DmaSetDestAddr,TRUSTED_Mcal_DmaSetSourceAddr,TRUSTED_Mcal_DmaSetTxCount] noreturn:[TRUSTED_Mcal_DmaEnableHwTransfer]
Adc_lDmaChDeInit call:[TRUSTED_Mcal_DmaChClrCtlCfg,TRUSTED_Mcal_DmaChClrIntctEtrlFlags,TRUSTED_Mcal_DmaChClrIntrFlags,TRUSTED_Mcal_DmaClrAdcr,TRUSTED_Mcal_DmaDisableHwTransfer,TRUSTED_Mcal_DmaDisableIntr] noreturn:[TRUSTED_Mcal_DmaChClrIntrFlags]
Adc_lDmaTransResUpdate global:[Adc_DmaBuffer,Adc_kConfigPtr] call:[Adc_lAlignResultBuffer,Adc_lGetDataAddress,Adc_lGetEmuxSelect,Adc_lSetResBuffEndStatusAtomic,while]
Adc_lInitGlobalVariables global:[Adc_BgndGrpCnt,Adc_BgndScanData] call:[Adc_lGetDataAddress,Adc_lKernelConfigured,Adc_lResetDmaData,while] noreturn:[Adc_lResetDmaData]
Adc_lGetRsCtrlData call:[return] noreturn:[return]
Adc_lGetTriggSelData call:[return] noreturn:[return]
Adc_lSetResBuffEndStatusAtomic call:[Mcal_SetAtomic] noreturn:[Mcal_SetAtomic]
Adc_lGetKernelChNum call:[return] noreturn:[return]
Adc_lClearEventFlag call:[return] noreturn:[return]
Adc_lGetEngtVal call:[EXTRACT,return] noreturn:[return]
Adc_lGetEruUnit call:[EXTRACT,return] noreturn:[return]
Adc_lGetEruOguUnit call:[EXTRACT,return] noreturn:[return]
Adc_lResetEruSfr global:[Adc_kConfigPtr] call:[Adc_lGetEruData,Adc_lKernelConfigured,Adc_lResetEruCfg,Adc_lResetEruGateCfg,while] noreturn:[Adc_lResetEruCfg,Adc_lResetEruGateCfg,while]
Adc_lGetDataAddress global:[Adc_kConfigPtr] call:[return] noreturn:[return]
