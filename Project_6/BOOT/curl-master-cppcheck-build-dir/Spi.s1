Spi_lIncrementAndRoundIndex
Spi_Init global:[Spi_BusStatus,Spi_DriverState,Spi_IBBufferAccess,Spi_InitStatus,Spi_NoOfIBChannels,Spi_SyncLock,Spi_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError,Spi_lClearChannelWriteLock,Spi_lClearJobResultStatus,Spi_lClearSequenceStatus,Spi_lHwInit,Spi_lSlaveInit,while] noreturn:[SafeMcal_ReportError]
Spi_InitCheck global:[Spi_DriverState,Spi_InitStatus,Spi_kConfigPtr] call:[OS_ReadPeripheral32,Spi_lHwCheckConfigExtn,Spi_lInitGlobalVarCheck,Spi_lModuleConfigured,Spi_lSlaveInitCheck,while] noreturn:[Spi_lSlaveInitCheck]
Spi_DeInit global:[Spi_BusStatus,Spi_DriverState,Spi_InitStatus,Spi_kConfigPtr] call:[Spi_lDisableChipSelect_SV,Spi_lGetDetInitStatus,Spi_lGetHwStatus,Spi_lHwDeInit,Spi_lSlaveDeInit,return,while] noreturn:[Spi_lDisableChipSelect_SV]
Spi_WriteIB global:[Spi_IBBufferAccess,Spi_NoOfIBChannels,Spi_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError,SchM_Enter_Spi_WriteIB,SchM_Exit_Spi_WriteIB,Spi_lClrChannelWriteLock,Spi_lGetChannelWriteLock,Spi_lGetDetInitStatus,Spi_lIBCopy16BitData,Spi_lIBCopy32BitData,Spi_lIBCopy8BitData,Spi_lSetChannelWriteLock,return] noreturn:[SchM_Exit_Spi_WriteIB,Spi_lIBCopy16BitData,Spi_lIBCopy32BitData,Spi_lIBCopy8BitData]
Spi_ReadIB global:[Spi_IBBufferAccess,Spi_NoOfIBChannels,Spi_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError,Spi_lGetDetInitStatus,while] noreturn:[while]
Spi_GetStatus call:[Spi_lGetHwStatus]
Spi_GetJobResult global:[Spi_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError,Spi_lGetDetInitStatus,Spi_lGetJobStatus] noreturn:[Spi_lGetJobStatus]
Spi_GetSequenceResult global:[Spi_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError,SchM_Enter_Spi_GetSequenceResult,SchM_Exit_Spi_GetSequenceResult,Spi_lGetDetInitStatus,Spi_lGetSeqStatus,Spi_lGetSequenceKind] noreturn:[SchM_Exit_Spi_GetSequenceResult,Spi_lGetSeqStatus]
Spi_SyncTransmit global:[Spi_BusStatus,Spi_SyncLock] call:[Det_ReportError,Mcal_LockResource,Mcal_UnlockResource,Spi_lSyncTransmit,Spi_lSyncTransmitDetCheck,return] noreturn:[Det_ReportError,return]
Spi_GetHWUnitStatus global:[Spi_InitStatus,Spi_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError,Spi_lHwGetModuleStatus] noreturn:[SafeMcal_ReportError]
Spi_Cancel global:[Spi_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError,SchM_Enter_Spi_Cancel,SchM_Exit_Spi_Cancel,SeqEndNotification,Spi_lGetDetInitStatus,Spi_lGetSeqStatus,Spi_lSetSeqStatus,Spi_lSlaveCancel] noreturn:[SeqEndNotification]
Spi_IsrQspiError call:[Dem_ReportErrorStatus,SafeMcal_ReportError,Spi_lHwCheckRxStatus,Spi_lHwClearErrIntr,Spi_lHwDisableModule,Spi_lHwDisableQspiErrIntr,Spi_lHwDisableQspiRxIntr,Spi_lSlaveErrorHandler] noreturn:[Dem_ReportErrorStatus,SafeMcal_ReportError]
Spi_IsrDmaQspiRx call:[SafeMcal_ReportError,Spi_lHwCheckSlaveRxStatus,Spi_lSlaveBusHandler,Spi_lSlaveDmaClrIntrFlag,Spi_lSlaveDmaGetTxIntStatus,Spi_lSlaveErrorHandler] noreturn:[SafeMcal_ReportError,Spi_lSlaveBusHandler,Spi_lSlaveErrorHandler]
Spi_IsrDmaError call:[SafeMcal_ReportError,Spi_lHwDisableQspiRxIntr,Spi_lSlaveErrorHandler] noreturn:[SafeMcal_ReportError,Spi_lSlaveErrorHandler]
Spi_IsrCheckDmaError global:[Spi_SlaveChnlAccess] call:[Mcal_DmaChClrIntrFlags,Mcal_DmaClrErrFlags,Mcal_DmaGetTransReqLostFlag,Mcal_DmaGetTransferIntStatus,SafeMcal_ReportError,Spi_lDmaGetBothMoveEngErrFlags] noreturn:[Mcal_DmaClrErrFlags]
Spi_lEnableChipSelect call:[OS_ModifyPeripheral32] noreturn:[OS_ModifyPeripheral32]
Spi_lDisableChipSelect call:[OS_ModifyPeripheral32,Spi_lHwGpioSetPortPin,UNUSED_PARAMETER] noreturn:[OS_ModifyPeripheral32,Spi_lHwGpioSetPortPin]
Spi_lDisableChipSelect_SV call:[Spi_lHwGpioSetPortPin,TRUSTED_Mcal_SetAtomic] noreturn:[Spi_lHwGpioSetPortPin,TRUSTED_Mcal_SetAtomic]
Spi_lSyncTransmitDetCheck global:[Spi_kConfigPtr] call:[Det_ReportError,SafeMcal_ReportError,Spi_lGetDetInitStatus]
Spi_lSyncStartJob global:[Spi_kConfigPtr] call:[Dem_ReportErrorStatus,OS_ReadPeripheral32,Spi_lDisableChipSelect,Spi_lEnableChipSelect,Spi_lHwCheckRxStatus,Spi_lHwSetJobConfig,Spi_lSetJobStatus,Spi_lSyncStartChannel,UNUSED_PARAMETER,while] noreturn:[Spi_lDisableChipSelect,Spi_lEnableChipSelect,Spi_lSetJobStatus]
Spi_lSyncStartChannel global:[Spi_IBBufferAccess,Spi_kConfigPtr] call:[Spi_lHwSetChannelConfig,Spi_lSyncTransmit16BitData,Spi_lSyncTransmit32BitData,Spi_lSyncTransmit8BitData] noreturn:[Spi_lSyncTransmit16BitData,Spi_lSyncTransmit32BitData,Spi_lSyncTransmit8BitData]
Spi_lModuleConfigured global:[Spi_kConfigPtr]
Spi_lAnyModuleConfigured global:[Spi_kConfigPtr]
Spi_lGetHwStatus global:[Spi_AsilSeqStatus,Spi_kConfigPtr] call:[OS_ReadPeripheral32,Spi_lAnyModuleConfigured,Spi_lGetSeqStatusInArray,while] noreturn:[while]
Spi_lIsQueueAvailable call:[SchM_Enter_Spi_AsyncTransmit,SchM_Exit_Spi_AsyncTransmit]
Spi_lHwDisableQspiErrIntr call:[OS_ModifyPeripheral32,OS_ReadPeripheral32] noreturn:[OS_ModifyPeripheral32]
Spi_lClearChannelWriteLock global:[Spi_IBBufferAccess]
Spi_lClearJobResultStatus global:[Spi_AsilJobResult]
Spi_lClearSequenceStatus global:[Spi_AsilSeqStatus]
Spi_lIBCopy16BitData global:[Spi_kConfigPtr] call:[while] noreturn:[while]
Spi_lIBCopy8BitData global:[Spi_kConfigPtr] call:[while] noreturn:[while]
Spi_lIBCopy32BitData global:[Spi_kConfigPtr] call:[while] noreturn:[while]
Spi_lSynTransErrCheck call:[OS_ReadPeripheral32,Spi_lHwGetErrStatus,Spi_lHwGetTxStatus,return] noreturn:[return]
Spi_lSyncTransmit16BitData call:[OS_ReadPeripheral32,OS_WritePeripheral32,SPI_lHwReadDestRegister,SPI_lHwUpdateSrcRegister,SchM_Enter_Spi_SyncTransmit,SchM_Exit_Spi_SyncTransmit,Spi_lClrPendingEvents,Spi_lGpioCsHandle,Spi_lSynTransErrCheck,UNUSED_PARAMETER,while] noreturn:[OS_WritePeripheral32,Spi_lGpioCsHandle,while]
Spi_lSyncTransmit8BitData call:[OS_ReadPeripheral32,OS_WritePeripheral32,SPI_lHwReadDestRegister,SPI_lHwUpdateSrcRegister,SchM_Enter_Spi_SyncTransmit,SchM_Exit_Spi_SyncTransmit,Spi_lClrPendingEvents,Spi_lGpioCsHandle,Spi_lSynTransErrCheck,UNUSED_PARAMETER,while] noreturn:[OS_WritePeripheral32,Spi_lGpioCsHandle,while]
Spi_lSyncTransmit32BitData call:[OS_ReadPeripheral32,OS_WritePeripheral32,SPI_lHwReadDestRegister,SPI_lHwUpdateSrcRegister,SchM_Enter_Spi_SyncTransmit,SchM_Exit_Spi_SyncTransmit,Spi_lClrPendingEvents,Spi_lGpioCsHandle,Spi_lSynTransErrCheck,UNUSED_PARAMETER,while] noreturn:[OS_WritePeripheral32,Spi_lGpioCsHandle,while]
Spi_lGpioCsHandle call:[Spi_lHwGpioSetPortPin] noreturn:[Spi_lHwGpioSetPortPin]
Spi_lClrPendingEvents call:[OS_WritePeripheral32,Spi_lHwGetRxStatus,Spi_lHwGetTxStatus] noreturn:[OS_WritePeripheral32]
Spi_lSyncTransmit global:[Spi_BusStatus,Spi_kConfigPtr] call:[Spi_lGetJobStatus,Spi_lGetSeqStatus,Spi_lSetJobStatusAtomic,Spi_lSetSeqStatusAtomic,Spi_lSyncStartJob,while] noreturn:[Spi_lSetSeqStatusAtomic]
Spi_lGetDetInitStatus global:[Spi_InitStatus,Spi_kConfigPtr] call:[Det_ReportError]
Spi_lGetSeqStatusInArray
Spi_lHwInit global:[Spi_IfxDebugStatus] call:[OS_ReadPeripheral32,OS_WritePeripheral32,SchM_Enter_Spi_Init,SchM_Exit_Spi_Init,Spi_lHwSetConfigExtn,Spi_lModuleConfigured,Spi_lQSPIHwKernelReset,TRUSTED_ApplResetEndInit,TRUSTED_ApplSetEndInit,while] noreturn:[OS_WritePeripheral32,Spi_lHwSetConfigExtn,Spi_lQSPIHwKernelReset]
Spi_lHwDeInit call:[OS_WritePeripheral32,SchM_Enter_Spi_DeInit,SchM_Exit_Spi_DeInit,Spi_lModuleConfigured,TRUSTED_ApplResetEndInit,TRUSTED_ApplSetEndInit,while] noreturn:[OS_WritePeripheral32,SchM_Exit_Spi_DeInit,TRUSTED_ApplSetEndInit]
Spi_lHwCheckRxStatus call:[OS_ReadPeripheral32,OS_WritePeripheral32,UNUSED_PARAMETER] noreturn:[OS_WritePeripheral32]
Spi_lHwCheckSlaveRxStatus
Spi_lHwSetJobConfig call:[OS_ModifyPeripheral32,OS_ReadPeripheral32,OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Spi_lHwSetConfigExtn call:[OS_WritePeripheral32,while] noreturn:[while]
Spi_lHwCheckConfigExtn call:[OS_ReadPeripheral32,return,while] noreturn:[return]
Spi_lQSPIHwKernelReset global:[Spi_IfxDebugStatus] call:[OS_ReadPeripheral32,OS_WritePeripheral32,TRUSTED_ApplResetEndInit,TRUSTED_ApplSetEndInit,UNUSED_PARAMETER,while]
Spi_lHwSetChannelConfig call:[OS_ReadPeripheral32,OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
Spi_lHwDisableQspiRxIntr call:[OS_ModifyPeripheral32,OS_ReadPeripheral32,UNUSED_PARAMETER] noreturn:[OS_ModifyPeripheral32]
Spi_lHwClearErrIntr
Spi_lDmaGetBothMoveEngErrFlags call:[OS_ReadPeripheral32,UNUSED_PARAMETER,return] noreturn:[return]
Spi_lSetSeqStatus global:[Spi_AsilSeqStatus,Spi_kConfigPtr] call:[Spi_lGetSequenceKind]
Spi_lGetSeqStatus global:[Spi_AsilSeqStatus,Spi_kConfigPtr] call:[Spi_lGetSequenceKind]
Spi_lSetJobStatusAtomic global:[Spi_AsilJobResult,Spi_kConfigPtr] call:[Mcal_SetAtomic,Spi_lGetJobKind] noreturn:[Mcal_SetAtomic]
Spi_lSetSeqStatusAtomic global:[Spi_AsilSeqStatus,Spi_kConfigPtr] call:[Mcal_SetAtomic,Spi_lGetSequenceKind] noreturn:[Mcal_SetAtomic]
Spi_lSetJobStatus global:[Spi_AsilJobResult,Spi_kConfigPtr] call:[Spi_lGetJobKind]
Spi_lGetChannelWriteLock global:[Spi_IBBufferAccess]
Spi_lSetChannelWriteLock global:[Spi_IBBufferAccess]
Spi_lClrChannelWriteLock global:[Spi_IBBufferAccess]
Spi_lGetCSPinOffset
Spi_lGetGpioAddr
Spi_lGetCSPortOffset
Spi_lHwDisableModule call:[OS_ModifyPeripheral32,UNUSED_PARAMETER] noreturn:[OS_ModifyPeripheral32]
Spi_lHwGetModuleStatus call:[OS_ReadPeripheral32]
SPI_lHwUpdateSrcRegister call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
SPI_lHwUpdateSrcRegViaModule call:[OS_WritePeripheral32] noreturn:[OS_WritePeripheral32]
SPI_lHwReadDestRegister call:[OS_ReadPeripheral32]
Spi_lHwClrQspiPendEvent call:[OS_WritePeripheral32,UNUSED_PARAMETER] noreturn:[OS_WritePeripheral32]
Spi_lHwGetTxStatus global:[Spi_IfxDebugStatus] call:[UNUSED_PARAMETER]
Spi_lHwGetErrStatus global:[Spi_IfxDebugStatus] call:[OS_ReadPeripheral32]
Spi_lHwGetRxStatus call:[OS_ReadPeripheral32]
Spi_lHwGpioSetPortPin call:[OS_WritePeripheral32,Spi_lGetCSPinOffset,Spi_lGetCSPortOffset,Spi_lGetGpioAddr,UNUSED_PARAMETER] noreturn:[OS_WritePeripheral32]
Spi_lGetModuleKind
Spi_lGetJobKind global:[Spi_kConfigPtr] call:[Spi_lGetModuleKind]
Spi_lGetSequenceKind global:[Spi_kConfigPtr] call:[Spi_lGetModuleKind]
Spi_lGetQmModuleVarIndex call:[Spi_lModuleConfigured]
Spi_lGetQmModuleVarIndexSeq global:[Spi_kConfigPtr] call:[Spi_lGetQmModuleVarIndex] noreturn:[Spi_lGetQmModuleVarIndex]
Spi_lInitGlobalVarCheck global:[Spi_AsilJobResult,Spi_AsilSeqStatus,Spi_BusStatus,Spi_IBBufferAccess,Spi_NoOfIBChannels,Spi_kConfigPtr] call:[while]
